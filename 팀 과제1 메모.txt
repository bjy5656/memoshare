전체 코드 리뷰 / 로직 역구상 

//0. 프로그램 구성 순서
//전체 로직 짜기 -> 사용할 변수, 메소드 기능 도출 -> 메소드 세부 로직 -> 프로그램 구현

//1. 전체로직 
//프로그램 실행 
//난이도 선택 메소드 호출
//-> 난이도를 입력받고 저장 
//-> 범위(최대값) 저장 
//랜덤숫자 구하기 메소드 호출 
//-> Random 클래스 객체를 사용해서 범위 내에서 랜덤숫자 구하고 저장 
//-> 난이도에 따라 입력제한수 구하고 저장 
//게임실행 메소드 호출 
//-> 입력값을 입력받고 저장(반복)
//-> 정답비교 메소드 호출
//--> 입력값과 랜덤숫자 일치 여부 반환(true or false) 
//-> 일치하면 반복 중지 
//-> 시도횟수가 일정(입력제한수의 절반 or 입력제한수-1) 이 되면 힌트제공 메소드 호출 
//--> 정답보다 큰지/작은지 정보 제공  
//--> 난수 2개 구하고 저장 
//--> 난수 2개를 정답에서 각각 더하고 빼서 좁혀진 범위 제공 
//--> 시도횟수, 남은횟수 정보 제공 
//-> 시도횟수가 입력제한수가 되면 반복 중지 
//-> 게임종료 메소드 호출 
//--> 종료메시지 출력 
//프로그램 종료 

//2. 사용할 필드와 메소드 기능 요약 
//필드 
//- 난이도(level), 범위(range), 랜덤숫자(answer), 입력제한수(limit), 입력값(input), 시도횟수(tryCount), 난수 2개(rn1,rn2)
//메소드
//- 난이도선택(setLevel) : 난이도(level) 저장, 범위(range) 저장
//- 랜덤숫자구하기(setRandom) : 랜덤숫자(answer) 저장, 입력제한수(limit) 저장 
//- 게임실행(getStart) : 입력값(input) 저장, 정답비교(checkAnswer) 호출, 힌트제공(getHint) 호출, 게임종료(quit) 호출 
//- 정답비교(checkAnswer) : 입력값(input)과 랜덤숫자(answer) 일치여부 반환(true/false) 
//- 힌트제공(getHint) : 큼/작음정보 출력, 난수 2개(rn1, rn2) 저장, 좁혀진범위 출력, 시도횟수(tryCount)와 남은횟수(limit - tryCount) 출력 
//- 게임종료(quit) : 게임종료 출력 

//3. 세부로직 

//난이도선택(setLevel) 
//리턴타입 : void 
//매개변수 : Scanner 객체
//while (true) 
//	출력(1부터 5까지 난이도 입력) 
//	this.level 에 정수 입력받고 대입 
//	지역변수 level 선언, this.level 값 대입 
//	if level이 0 초과, 5 이하이면 실행 
//		this.range에 level * 20 대입, break; 
//	else 
//		출력(입력 가능한 난이도, 다시 입력해주세요)
//while 종료 

//랜덤숫자구하기(setRandom) 
//리턴타입 : void 
//매개변수 x 
//Random 객체 생성 
//Random 객체.nextInt() 메소드에 매개변수로 범위(range) 대입하여 범위 내 난수를 구하고 랜덤숫자(answer)에 대입 
//출력(선택한 난이도는 level 입니다)
//출력(범위는 1부터 range 까지입니다)
//입력제한수(limit)에 난이도(level) * 5 대입 

//게임실행(getStart)
//리턴타입 : void 
//매개변수 : Scanner 객체 
//while(true) 
//	출력(숫자 입력) 
//	입력값(input)에 정수 입력받고 대입 
//	출력(input을 입력하셨습니다)
//	시도횟수(tryCount) 1 증가 
//	if 입력값이 1 미만이거나 범위 초과이면 실행
//		출력(범위를 벗어난 입력입니다) 
//	else 
//		출력(tryCount 번 입력했습니다)
//		if 정답비교(checkAnswer) 메소드 리턴값이 true이면 break; 
//		if 시도횟수가 입력제한수 / 2 이면 힌트제공(getHint) 메소드 실행 
//		else if 시도횟수가 입력제한수 - 1 이면 힌트제공(getHint) 메소드 실행 
//	if 시도횟수가 입력제한수이면 실행
//		출력(시도횟수를 초과했습니다)
//		break;
//while 종료
//게임종료(quit) 메소드 호출 

//정답비교(checkAnswer)
//리턴타입 : boolean
//매개변수 x
//if 입력값(input)이 랜덤숫자(answer)이면 실행
//	출력(정답입니다)
//	true 반환 
//else 
//	출력(틀렸습니다)
//	false 반환 

//힌트제공(getHint)
//리턴타입 : void 
//매개변수 x 
//if 입력값(input)이 랜덤숫자(answer) 보다 크면 출력(정답보다 큰수를 입력했습니다)
//else 출력(정답보다 작은수를 입력했습니다) 
//if 시도횟수(tryCount)가 입력제한수(limit) / 2 이면 실행 
//	Math.randon()메소드로 0~1 사이 난수를 구하고 10 곱한 뒤 난수1,2(rn1, rn2)에 대입
//else if 시도횟수가 입력제한수 - 1 이면 실행 
//	 Math.randon()메소드로 0~1 사이 난수를 구하고 3 곱한 뒤 난수1,2(rn1, rn2)에 대입
//if 랜덤숫자 - 난수1 이 0 이하이면 실행 
//	난수1에 랜덤숫자 - 1 대입 
//if 랜덤숫자 + 난수2 이 범위보다 크면 실행 
//	난수2에 (범위 - 랜덤숫자) 대입 
//출력(정담은 (랜덤숫자 - 난수1) 에서 (랜덤숫자 + 난수2) 사이에 있습니다)
//출력(tryCount번 시도했습니다, limit - tryCount번 남았습니다)

//게임종료(quit)
//리턴타입 : void
//매개변수 x
//출력(종료합니다) 

//main메소드 
//입력클래스 선언, import 
//클래스 객체 선언 및 생성
//난이도선택(setLevel) 메소드 입력클래스 객체 매개변수로 주고 호출
//랜덤숫자구하기(setRandom) 메소드 호출
//게임실행(getStart) 메소드 입력클래스 객체 매개변수로 주고 호출 
//입력클래스 닫기 

//+. 수정할사항
//- setRandom 메소드에서 this.answer에 대입할 때 난수가 0일 때만 1 더하는 것으로 수정(20이면 21 됨)
//- 버퍼지우기 메소드 추가 
//- 인스턴스 변수앞에 this 쓸지 안쓸지 통일 
//- getHint 메소드에서 if ((this.answer - this.rn1) < 0) 에서 0 미만에서 이하로 바꾸기 


수정할 것 있으면 수정 
내 코드 발표 어떻게 할지 구상
여유 되면 개선된 버전 만들어보기 
여유 되면 발표자료 및 대본 만들어보기 

*생각해볼점
- 주안점 
- 고민사항
- 프로그램 구성 순서 및 이유 
- 주석
- 다양한 구체적인 기능
- 현실적인 기능
- 코드 가독성 
- 목소리, 아이컨택, 말투
- 어떻게 내용을 말로 뱉어낼지
- 구어체 
- 문어체 

*프로그램 개선점
- 게임 도중에 종료
- 힌트제공 여부 선택 


































