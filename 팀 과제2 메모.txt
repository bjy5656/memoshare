패키지명, 클래스명, 필드명

프로젝트명 : LibraryTeamProject
패키지명, 클래스/인터페이스명 : 
1. user
- User(추상클래스)
	사용자기본정보 필드
		private String name
		private int	age
		private int	userNum;
- LoginManager
	Map 필드		로그인정보
	getUer		map에 사용자 저장/조회 메소드
	Login		사용자 로그인 기능 메소드

2. member
- Member(User 상속)
	List 필드 	book
	borrowBook 	도서대출메소드(재정의)
	returnBook 	도서반납메소드(재정의)
	checkList  	대출중인 책 목록 확인 메소드

3. bookMaker
- Borrow(인터페이스)
	borrowBook	도서대출메소드
	returnBook	도서반납메소드
- Book(클래스) 
	도서관련기본정보 필드(제목, 저자, 대출정보) 
	printInfo
	borrowBook	도서대출메소드(재정의)

4. serviceDeveloper
- LibraryService
	List 필드 	
	printBookList		도서목록출력메소드
	borrowBookService	도서대여메소드
	returnBookService	도서바납메소드

5. exceptionMaker
- MaxBorrowException(한도초과)	
- BookNotAvailableException(대출불가)
- BookAlreadyException(이미대여)

6. UIAppMaker
- ConsoleUI
	- 메뉴 메소드(스캐너 sc)
	- 대출 책 목록 출력 메소드()
	- 반납 책 목록 출력 메소드()
	
- LibraryApp(main)
	- 위에 기능들 하나로 묶어서 사용할 수 있는 메인메소드 구현

전체 
필드 : private 
메소드 : public 
toString : 모든 메소드에서 오버라이딩 
equals, hashCode : 비교가 필요한 경우만 오버라이딩 

순서 
1번, 3번 먼저 가능 
1번 -> 2번 
1, 2, 3 -> 4 -> 6


도서 대출 프로그램 로직 

프로램 실행->로그인	-> member 정보 비교 -> 도서 대출 -> 대출할책목록출력
				  -> 도서 반납 -> 반납할책목록출력 
	 -> 로그아웃
	 -> 도서 검색 

+)추가기능			
회원정보넣기/회원가입/회원탈퇴?
도서정보넣기? 

3번 도서 설계자 로직 
Book 클래스 
	도서 기본정보(제목, 저자, 대출정보) 
	String title; 
	String author;
	boolean isAvailable
	대여메소드 -> 
	반납메소드 -> 

Borrow 인터페이스 
	대여메소드 -> 예외던지기 
	반납메소드 

toString 오버라이딩 
필요시equals, hashCode 오버라이딩

코딩개선과제(학생정보저장) 
toString, equals, hashCode 관련 

toString ->	1안 : 키를 학번으로 저장, 학번이 같은데 학생이름이 다른 객체가 추가되면(equals->false) -> 기존 이름과 다른데 갱신할 것인지 묻기 
		2안 : 키를 아이디로 저장, 학


Book 클래스 
toString, equals, hashCode 관련 

toString -> Book 객체의 정보 문자열로 반환 

equals -> 이름, 저자 비교 

hashCode -> 



"250711 12:4 백정이 Book, Borrow 클래스 3차수정 = 잔오류수정"
merge!

전체 로직

User(추상클래스)
     시용자 기본정보??
     이름
     전화번호
     대출메소드(추상메소드) 선언, 예외 던지기
     반납메소드(추상메소드) 선언
LoginManager
     회원목록(Map<id, 회원>)
     관리자목록(Map<id, 관리자>)
     회원가입
          매개변수:(id, pw, 이름, 전화번호), 회원목록에 회원 추가
     로그인
          매개변수:(id, pw)
	  pw 일치하면 회원 혹은 관리자 반환 및 로그인여부 변경
	  pw 일치하지 않으면 회원 정보 없는 회원 생성하고 반환
     로그아웃
	  매개변수:(User)
          회원의 로그인여부변경
     toString 재정의
	  LoginManager 정보 반환
          
Member(User 상속)
     id
     pw
     로그인여부
     자기책목록(List<책>)
     대출한도(값:20)
     대출메소드 상속/재정의
	   매개변수:(책)
	   대출한도가 0이면 한도초과 예외 발생
	   자기책목록에 책이 이미 있으면 이미대여 예외 발생
          자기책목록에 책 추가, 책의 대출메소드 호출, 대출한도 1차감
     반납메소드 상속/재정의
          매개변수:(책), 자기책목록에서 책 제거, 책의 반납메소드 호출, 대출한도 1증가
     toString 재정의
          회원 정보 반환
          
Admin(User 상속)
     id
     pw
     로그인여부

Book
     제목
     저자
     출판사
     대출가능여부
     대출메소드 상속/재정의 
	  대출가능여부가 불가이면 대출불가 예외 발생
          대출가능여부변경
	  메시지 출력
     반납메소드 상속/재정의
          대출가능여부변경
	  메시지 출력
     toString 재정의
          책 정보 반환
     equals 재정의
          제목, 저자, 출판사 기준으로 비교 
     hashCode 재정의
          제목, 저자, 출판사를 이용해서 생성한 해시값 반환
Borrow
     대출메소드 선언, 대출불가 예외 던지기
     반납메소드 선언

LibraryService
	도서목록(List<책>)
	제목배열 //태호님 코드
	저자배열 //태호님 코드
	출판사배열 //태호님 코드
	도서목록 출력
		도서목록의 각 책마다 출력, 도서목록번호를 함께 출력
	도서검색 
		매개변수:(도서제목)
		도서목록의 제목에 해당하는 책마다 출력, 도서목록번호를 함께 출력
	대출메소드
		매개변수:(회원, 도서목록번호)
		도서목록번호에 해당하는 책을 매개변수에 대입하여 회원의 대출메소드를 호출, 예외 던지기
	반납메소드
		매개변수:(회원, 자기책목록번호)
		자기책목록번호에 해당하는 책을 매개변수에 대입하여 회원의 반납메소드를 호출
	toString 재정의
		LibraryService 정보 반환 
	책 랜덤 생성 메소드 //태호님 코드
	책 추가 메소드 //태호님 코드
		매개변수:(제목, 저자, 출판사)
		메시지 출력
Exception
	한도초과(MaxBorrowException 클래스)
	대출불가(BookNotAvailableException 클래스)
	이미대여(BookAlreadyException 클래스)
	ConsoleUI      ConsoleUI 클래스의 메소드 6번과 나눠서 작성할 것

ConsoleUI
	로그인회원(Member)
	로그인관리자(Admin)
	메뉴메소드
		메뉴 출력(1,2,3,4,...,0:시스템종료)
			1 : 로그아웃된 상태면 로그인 / 로그인된 상태면 로그아웃
			2 : 도서 검색
			3 : 도서 목록 보기 
			로그인된 상태면 출력 4 : 도서 대출 
			로그인된 상태면 출력 5 : 도서 반납
			로그인된 상태면 출력 6 : 대출가능 도서 목록 보기 
			로그인된 상태면 출력 7 : 반납할 도서 목록 보기
			관리자계정으로 로그인된 상태면 출력 8 : 도서 등록
			로그아웃된 상태면 출력 9 : 회원가입
			0 : 시스템 종료
	번호입력메소드
		매개변수:(Scanner 객체), 입력번호 반환, 예외 던지기 
	toString 재정의
		ConsoleUI 정보 반환

LibraryApp(main)
	대출할 책 목록 메소드 
		매개변수:(LibraryService 객체), 가능한 책 목록 출력, 도서목록번호를 함께 출력
	반납할 책 목록 메소드 
		매개변수:(회원), 자기책목록 출력, 자기책목록번호를 함께 출력 
	메인메소드
		Scanner 객체 생성
		ConsoleUI 객체 생성 
		ConsoleUI 정보 출력
		LoginManager 객체 생성
		LoginManager 정보 출력
		LibraryService 객체 생성
		LibraryService 정보 출력 
		LibraryService 객체의 책 랜덤 생성 메소드 호출
		입력할 Member 정보 변수 선언
		입력할 제목/저자/출판사 변수 선언
		입력할 목록번호 변수 선언
		입력번호 변수 선언
		while문(입력번호가 0이 아니면 반복)
		ConsoleUI의 Member/Admin 객체 로그인된 상태이면 Member 정보 출력
		메뉴메소드 호출
		입력번호 = 번호입력메소드 호출, 예외처리
		switch문 
		입력번호:1
			로그아웃된 상태면 id/pw 입력받기, 로그인 메소드 호출하고 Member/Admin 객체에 대입, 예외처리
			로그인된 상태면 로그아웃 메소드 호출, Member 객체 예외처리
		입력번호:2
			도서제목 입력받기, 예외처리
			도서검색 메소드 호출
		입력번호:3
			도서목록 출력 메소드 호출	
		입력번호:4
			대출가능한 책 목록 메소드 호출
			도서목록번호 입력받기, LibraryService의 대출메소드 호출, 예외처리 
		입력번호:5
			반납할 책 목록 메소드 호출
			자기책목록번호 입력받기, LibraryService의 반납메소드 호출, 예외처리 
		입력번호:6
			대출할 책 목록 메소드 호출
		입력번호:7
			반납할 책 목록 메소드 호출
		입력번호:8
			관리자로 로그인된 상태면 제목/저자/출판사 입력받기, 책 추가 메소드 호출
		입력번호:9
			로그아웃된 상태면 이름/전화번호/id/pw 입력받기, 회원가입 메소드 호출, 예외처리
		while문 종료(입력번호가 0이면)
		종료되었습니다 출력 
		
			
			
			
		

*생각해 볼 수 있는 기능 
회원정보 수정 기능 
회원탈퇴 기능 
랜덤하게 책 자동 추가
책이 없는 책일 때 예외 발생 
잘못된 입력일 때 예외 발생
관리자 로그인 및 도서추가 기능
책을 Map<도서제목, Set<책>>에 저장, 권수 필드 추가, 같은 책이면 권수가 1증가하도록 함, 대출시 목록번호를 입력하거나 저자/출판사를 같이 입력하여 대출할 수 있도록 함(혹은 제목 입력시 중복되는 책이 있으면 저자도 입력, 저자도 중복되면 출판사를 입력)
저자, 출판사로도 검색할 수 있는 기능 

*수정 여지 있는 사항 
1. member 클래스의 메소드에서 예외 발생시 생성자에 메시지 대입 해야하는가?
2. LoginManager에 생성자 호출 시 회원목록 생성자로 객체 만들어서 초기화
3. 메세지 출력 코드 위치 확인 
4. 같은 클래스 내에서 getter, setter 사용하지 않고 접근 
5. Book 클래스 equals 이름이 같으면 true를 반환하도록 수정 -> 도서 검색시 사용, List에 추가할 때에는 이름이 중복이어도 추가됨(도서 검색시 입력하는 속성과 알맞게 수정) 
6. ConsoleUI      ConsoleUI 클래스의 메소드 6번과 나눠서 작성할 것 -> ???
7. LibraryService의 대출메소드에서 index로 대출할 때 index가 -1일 때 예외처리 
8. 각종 예외 발생 및 처리


4. Book 클래스에서 isAvailable 변경시 setter 사용하지 않고 변경
5. LibraryService클래스의 borrowBookList메소드에서 isFound가 false이면 어떻게되나요? / 대출, 반납할때 인덱스가 없거나 책제목이 없으면 어떻게되는지 (지금은 while문 첨으로 돌아가는것 같음) -> 
9. 예외 3종세트 발생되도록 수정 