복습 
1. Java 개발 배경 
- 1995년 공식 발표, sun 마이크로시스템사 제임스 고슬링 팀이 1991년에 개발 시작 
- 목적 : 가전제품을 제어할 수 있는 이식성 높은 언어 개발 
- 이후 인터넷 시대와 맞물리며 웹 프로그래밍 언어로 급 부상하였다. 
- 객체 지향 프로그래밍 언어(OOP) 이다. 
- C, C++의 문법을 기반으로 개발되었다. 
- 포인터 제거, 메모리 자동 관리 등으로 안정성과 이식성이 강화되었다. 
- 이름은 Oak(오크) 상표로 등록하려고 하였으나 이미 등록되어 있어 즐겨 마시던 커피 이름(java)으로 채택하게 되었다. 

2. Java 특징 
- 객체 지향 언어(OOP : Object-Oriented Programming)이다. 
- 모든 것이 객체로 구성되었다.(클래스, 객체, 상속, 다형성, 캡슐화 등) 
- 유지보수와 확장성이 뛰어나다. 
- 플랫폼 독립성(Platform Independence)
- JVM(Java Virtual Machine) 위에서 실행됨. 
- Write Once, Run Anywhere => 한 번 작성하면 어디서든 실행 가능하다. 

자동 메모리 관리(Automatic Memory Manaement) 
- 가비지 컬렉터(Garbage Collector)가 불필요한 메모리를 자동으로 정리한다. 
- 개발자가 직접 메모리를 해제할 필요가 없다. => 메모리 누수가 방지된다. 
- 보안성(Security)가 뛰어나다. 
- JVM의 샌드박스 구조로 시스템 자원에 대한 접근이 제한된다. 
- 멀티쓰레드를 지원한다.(Multi-threading Support) => 하나의 프로그램 내에서 여러 작업을 동시에 처리할 수 있다.
- 단일쓰레드 => 한 번에 하나의 작업밖에 수행하지 못한다. 
- 풍부한 라이브러리를 제공한다. => JRE 라이브러리 만으로 구동 가능 
	=> java.util, java.io, java.net 등 방대한 API를 제공한다.  
- 배우기 쉽다(Simple & Familiar) => C/C++ 기반 문법이라 익히기가 쉽다. 
- 반면 포인터와 메모리 수동 관리가 제거되어서 복잡성이 감소되었다. 
- 동적 로딩(Dynamic Class Loading) => 실행 시 필요한 클래스만 동적으로 로딩하여 메모리 효율적으로 사용한다. => 프로그램의 유연성과 확장성 향상된다. 

3. 프로그램 개발순서(다른 프로그램) 
(1) 소스파일 작성(Source File) 
- hello.c, hello.py 
(2) 컴파일 
- 사람이 이해하기 쉬운 고급 언어를 컴퓨터가 이해할 수 있는 기계어(0, 1)로 변환하는 과정 
컴파일러(Compiler) 
- 컴파일 작업을 수행하는 프로그램 
=> 실행파일 생성(.exe 등) 
(3) 실행 
- 실행파일을 컴퓨터에서 실행하면 프로그램 동작 시작 
- CPU는 기계어 명령어를 해석하고 실행한다. 
1. 프로그램 개발순서(JAVA 프로그램) 
- 컴파일 이후에 바이트코드(.class)를 만들고 JVM이 실행 
[Hello.java] 
javac(자바 컴파일러) 
[Hello.class] 
java(JVM이 실행, JVM이 운영























































































