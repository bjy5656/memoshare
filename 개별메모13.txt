*생각해볼기능
- 댓글 삭제
- 배너 등록
- 게시판
- 공지사항 등록
- 로그인/로그아웃

*프로젝트 순서 
주제기획/서비스 구상 
페이지구성/흐름도 제작 
퍼블리싱
ERD설계
JSP 백단 설계


팀장
가입 
참가신청
팀 생성
참가서류 pdf로 

아이디어 명칭 
지도 API, 공공데이터 API, 결제 API 등을 활용한 지역 정착을 위한 생활 정보 통합 플랫폼 개발

0. 대략적인 구성
1. 전체 로직구성 
-> 기능 구상, 아이디어 회의 충분히(뒤에서 바꾸거나 추가하면 힘듭니다)
2. 사용할 변수 도출, 메소드 결정 
3. 메소드별 세부 로직 구성 
4. 프로그램 구현 

~ 7/1 -> java 프로그래밍  		
7/1 ~ 7/7 -> 데이터베이스 		
7/7 ~ 7/17 -> 화면 구현의 이해 	7/10 ~ 7/14 하계휴가, 7/15 ~ 7/17 백정이 예비군(출퇴근)
7/17 ~ 8/6 -> 중간프로젝트 		7/23 참가팀 발표, 7/25 zoom 오리엔테이션, 7/28 ~ 8/7 온라인 zoom 해커톤 
~ 8/11 -> 해커톤 제출(이이디어 기획서)		

----------------------------------------------------------------------
//0. 프로그램 구성 순서
//전체 로직 짜기 -> 사용할 변수, 메소드 기능 도출 -> 메소드 세부 로직 -> 프로그램 구현

//1. 전체로직 
//프로그램 실행 
//난이도 선택 메소드 호출
//-> 난이도를 입력받고 저장 
//-> 범위(최대값) 저장 
//랜덤숫자 구하기 메소드 호출 
//-> Random 클래스 객체를 사용해서 범위 내에서 랜덤숫자 구하고 저장 
//-> 난이도에 따라 입력제한수 구하고 저장 
//게임실행 메소드 호출 
//-> 입력값을 입력받고 저장(반복)
//-> 정답비교 메소드 호출
//--> 입력값과 랜덤숫자 일치 여부 반환(true or false) 
//-> 일치하면 반복 중지 
//-> 시도횟수가 일정(입력제한수의 절반 or 입력제한수-1) 이 되면 힌트제공 메소드 호출 
//--> 정답보다 큰지/작은지 정보 제공  
//--> 난수 2개 구하고 저장 
//--> 난수 2개를 정답에서 각각 더하고 빼서 좁혀진 범위 제공 
//--> 시도횟수, 남은횟수 정보 제공 
//-> 시도횟수가 입력제한수가 되면 반복 중지 
//-> 게임종료 메소드 호출 
//--> 종료메시지 출력 
//프로그램 종료 

//2. 사용할 필드와 메소드 기능 요약 
//필드 
//- 난이도(level), 범위(range), 랜덤숫자(answer), 입력제한수(limit), 입력값(input), 시도횟수(tryCount), 난수 2개(rn1,rn2)
//메소드
//- 난이도선택(setLevel) : 난이도(level) 저장, 범위(range) 저장
//- 랜덤숫자구하기(setRandom) : 랜덤숫자(answer) 저장, 입력제한수(limit) 저장 
//- 게임실행(getStart) : 입력값(input) 저장, 정답비교(checkAnswer) 호출, 힌트제공(getHint) 호출, 게임종료(quit) 호출 
//- 정답비교(checkAnswer) : 입력값(input)과 랜덤숫자(answer) 일치여부 반환(true/false) 
//- 힌트제공(getHint) : 큼/작음정보 출력, 난수 2개(rn1, rn2) 저장, 좁혀진범위 출력, 시도횟수(tryCount)와 남은횟수(limit - tryCount) 출력 
//- 게임종료(quit) : 게임종료 출력 

//3. 세부로직 

//난이도선택(setLevel) 
//리턴타입 : void 
//매개변수 : Scanner 객체
//while (true) 
//   출력(1부터 5까지 난이도 입력) 
//   this.level 에 정수 입력받고 대입 
//   지역변수 level 선언, this.level 값 대입 
//   if level이 0 초과, 5 이하이면 실행 
//      this.range에 level * 20 대입, break; 
//   else 
//      출력(입력 가능한 난이도, 다시 입력해주세요)
//while 종료 

//랜덤숫자구하기(setRandom) 
//리턴타입 : void 
//매개변수 x 
//Random 객체 생성 
//Random 객체.nextInt() 메소드에 매개변수로 범위(range) 대입하여 범위 내 난수를 구하고 랜덤숫자(answer)에 대입 
//출력(선택한 난이도는 level 입니다)
//출력(범위는 1부터 range 까지입니다)
//입력제한수(limit)에 난이도(level) * 5 대입 

//게임실행(getStart)
//리턴타입 : void 
//매개변수 : Scanner 객체 
//while(true) 
//   출력(숫자 입력) 
//   입력값(input)에 정수 입력받고 대입 
//   출력(input을 입력하셨습니다)
//   시도횟수(tryCount) 1 증가 
//   if 입력값이 1 미만이거나 범위 초과이면 실행
//      출력(범위를 벗어난 입력입니다) 
//   else 
//      출력(tryCount 번 입력했습니다)
//      if 정답비교(checkAnswer) 메소드 리턴값이 true이면 break; 
//      if 시도횟수가 입력제한수 / 2 이면 힌트제공(getHint) 메소드 실행 
//      else if 시도횟수가 입력제한수 - 1 이면 힌트제공(getHint) 메소드 실행 
//   if 시도횟수가 입력제한수이면 실행
//      출력(시도횟수를 초과했습니다)
//      break;
//while 종료
//게임종료(quit) 메소드 호출 

//정답비교(checkAnswer)
//리턴타입 : boolean
//매개변수 x
//if 입력값(input)이 랜덤숫자(answer)이면 실행
//   출력(정답입니다)
//   true 반환 
//else 
//   출력(틀렸습니다)
//   false 반환 

//힌트제공(getHint)
//리턴타입 : void 
//매개변수 x 
//if 입력값(input)이 랜덤숫자(answer) 보다 크면 출력(정답보다 큰수를 입력했습니다)
//else 출력(정답보다 작은수를 입력했습니다) 
//if 시도횟수(tryCount)가 입력제한수(limit) / 2 이면 실행 
//   Math.randon()메소드로 0~1 사이 난수를 구하고 10 곱한 뒤 난수1,2(rn1, rn2)에 대입
//else if 시도횟수가 입력제한수 - 1 이면 실행 
//    Math.randon()메소드로 0~1 사이 난수를 구하고 3 곱한 뒤 난수1,2(rn1, rn2)에 대입
//if 랜덤숫자 - 난수1 이 0 이하이면 실행 
//   난수1에 랜덤숫자 - 1 대입 
//if 랜덤숫자 + 난수2 이 범위보다 크면 실행 
//   난수2에 (범위 - 랜덤숫자) 대입 
//출력(정담은 (랜덤숫자 - 난수1) 에서 (랜덤숫자 + 난수2) 사이에 있습니다)
//출력(tryCount번 시도했습니다, limit - tryCount번 남았습니다)

//게임종료(quit)
//리턴타입 : void
//매개변수 x
//출력(종료합니다) 

//main메소드 
//입력클래스 선언, import 
//클래스 객체 선언 및 생성
//난이도선택(setLevel) 메소드 입력클래스 객체 매개변수로 주고 호출
//랜덤숫자구하기(setRandom) 메소드 호출
//게임실행(getStart) 메소드 입력클래스 객체 매개변수로 주고 호출 
//입력클래스 닫기 

//+. 수정할사항
//- setRandom 메소드에서 this.answer에 대입할 때 난수가 0일 때만 1 더하는 것으로 수정(20이면 21 됨)
//- 버퍼지우기 메소드 추가 
//- 인스턴스 변수앞에 this 쓸지 안쓸지 통일 
//- getHint 메소드에서 if ((this.answer - this.rn1) < 0) 에서 0 미만에서 이하로 바꾸기 


*생각해볼점
- 주안점 
- 고민사항
- 프로그램 구성 순서 및 이유 
- 주석
- 다양한 구체적인 기능
- 현실적인 기능
- 코드 가독성 
- 목소리, 아이컨택, 말투
- 어떻게 내용을 말로 뱉어낼지
- 구어체 
- 문어체 

*프로그램 개선점
- 게임 도중에 종료
- 힌트제공 여부 선택 

---------------------------------------------------------
시험범위
jvm, jre, jdk
jvm 메모리 3가지
형변환 
*JAVA 특징 
*객체지향 언어 
*클래스, 객체, 상속, 다형성
자료형
형변환 4개 
연산자
제어문
7일차 실습문제 복습(코인노래방 제외)
반복문 1문제 
*배열
8일차 메모리 영역 여러가지 복습
구구단
메소드 
메소드 호출 방법 
**10일차 메소드 꼭 복습 
객체지향언어 4개 - 클래스, 객체, 상속, 다양성
11일차 *생성자 
메모리 구조 
- method 영역
- heap 영역
- stack 영역
12일차 final 변수(상수), enum
***변수의 종류 

시험시간 2시간(범위 : 변수 ~ 상속) 
개념 서술형 2문제(소문제있음-부분점수) 
코드작성 3문제(로직없으면 -10점) 
	로직작성 1문제
	코드작성 2문제(반복문)
	코드작성 2문제(반복문), day09(가능성높음)~day11 내용 중 1개 
생성자 있는 클래스 다시 한번 체크
9일차 MethodTask 패키지 안 MethodTask 체크(로직작성 확인) 
*구구단
*for문 
*while문 

월욜날 한번더 집어주심(점수배분도)











